<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>图标下载工具</title>
    <style>
        /* 小红书风格基础样式 */
        :root {
            --primary-color: #FF2442;
            --secondary-color: #FF758C;
            --bg-color: #FFF4F6;
            --card-bg: #FFFFFF;
            --text-color: #333333;
            --light-text: #999999;
            --border-radius: 12px;
            --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        }
        
        body {
            font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            margin: 0;
            padding: 20px;
            line-height: 1.6;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
        }
        
        /* 头部样式 */
        .header {
            text-align: center;
            margin-bottom: 30px;
            position: relative;
        }
        
        .header h1 {
            color: var(--primary-color);
            font-size: 28px;
            margin: 0;
            padding: 15px 0;
            font-weight: 600;
            display: inline-block;
            position: relative;
        }
        
        .header h1::after {
            content: "";
            position: absolute;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 3px;
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            border-radius: 3px;
        }
        
        /* 主内容区域 */
        .main-content {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            padding: 25px;
            box-shadow: var(--box-shadow);
        }
        
        /* 标签页样式 */
        .tabs {
            display: flex;
            border-bottom: 1px solid #FFD6D6;
            margin-bottom: 20px;
        }
        
        .tab {
            padding: 10px 20px;
            cursor: pointer;
            font-weight: 600;
            color: var(--light-text);
            position: relative;
        }
        
        .tab.active {
            color: var(--primary-color);
        }
        
        .tab.active::after {
            content: "";
            position: absolute;
            bottom: -1px;
            left: 0;
            right: 0;
            height: 2px;
            background-color: var(--primary-color);
        }
        
        /* 表单样式 */
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--primary-color);
        }
        
        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #FFD6D6;
            border-radius: var(--border-radius);
            font-family: inherit;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--primary-color);
        }
        
        /* 按钮样式 */
        .btn {
            display: inline-block;
            padding: 12px 24px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            text-align: center;
            width: 100%;
        }
        
        .btn:hover {
            background-color: #FF4757;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(255, 46, 77, 0.4);
        }
        
        .btn:active {
            transform: translateY(0);
        }
        
        /* 结果展示区域 */
        .result-container {
            margin-top: 30px;
            text-align: center;
        }
        
        .result-placeholder {
            color: var(--light-text);
            font-size: 16px;
            padding: 40px 0;
        }
        
        .icon-preview {
            max-width: 200px;
            height: auto;
            border-radius: var(--border-radius);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            margin: 0 auto 20px;
            display: none;
        }
        
        .download-btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: var(--secondary-color);
            color: white;
            border-radius: var(--border-radius);
            text-decoration: none;
            font-weight: 600;
            margin-top: 15px;
            transition: all 0.3s;
        }
        
        .download-btn:hover {
            background-color: #FF5E7D;
            transform: translateY(-2px);
        }
        
        /* 响应式设计 */
        @media (max-width: 600px) {
            .header h1 {
                font-size: 24px;
            }
            
            .form-control {
                padding: 10px 12px;
                font-size: 14px;
            }
            
            .btn {
                padding: 10px 20px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>✨ 图标下载工具</h1>
            <p>轻松下载iOS应用、Mac应用和网站图标</p>
        </div>
        
        <div class="main-content">
            <!-- 标签页导航 -->
            <div class="tabs">
                <div class="tab active" data-tab="ios">iOS应用</div>
                <div class="tab" data-tab="mac">Mac应用</div>
                <div class="tab" data-tab="web">网页图标</div>
            </div>
            
            <!-- iOS应用图标下载表单 -->
            <div class="tab-content" id="ios-tab">
                <div class="form-group">
                    <label for="ios-app-name">iOS应用名称</label>
                    <input type="text" id="ios-app-name" class="form-control" placeholder="例如: 微信">
                </div>
                <div class="form-group">
                    <label for="ios-app-id">App Store ID (可选)</label>
                    <input type="text" id="ios-app-id" class="form-control" placeholder="例如: 414478124">
                    <small style="color: var(--light-text);">可在App Store链接中找到，如 https://apps.apple.com/cn/app/id414478124</small>
                </div>
                <button class="btn" id="ios-fetch-btn">获取图标</button>
            </div>
            
            <!-- Mac应用图标下载表单 -->
            <div class="tab-content" id="mac-tab" style="display: none;">
                <div class="form-group">
                    <label for="mac-app-name">Mac应用名称</label>
                    <input type="text" id="mac-app-name" class="form-control" placeholder="例如: 微信">
                </div>
                <div class="form-group">
                    <label for="mac-app-id">App Store ID (可选)</label>
                    <input type="text" id="mac-app-id" class="form-control" placeholder="例如: 414478124">
                    <small style="color: var(--light-text);">可在Mac App Store链接中找到</small>
                </div>
                <button class="btn" id="mac-fetch-btn">获取图标</button>
            </div>
            
            <!-- 网页图标下载表单 -->
            <div class="tab-content" id="web-tab" style="display: none;">
                <div class="form-group">
                    <label for="website-url">网站URL</label>
                    <input type="text" id="website-url" class="form-control" placeholder="例如: https://www.apple.com">
                </div>
                <button class="btn" id="web-fetch-btn">获取图标</button>
            </div>
            
            <!-- 结果展示区域 -->
            <div class="result-container">
                <img id="icon-preview" class="icon-preview" alt="图标预览">
                <div id="result-placeholder" class="result-placeholder">图标将在这里显示</div>
                <a id="download-link" class="download-btn" style="display: none;" download>下载图标</a>
            </div>
        </div>
    </div>

    <script>
        // DOM元素
        const tabs = document.querySelectorAll('.tab');
        const iosTab = document.getElementById('ios-tab');
        const macTab = document.getElementById('mac-tab');
        const webTab = document.getElementById('web-tab');
        const iosFetchBtn = document.getElementById('ios-fetch-btn');
        const macFetchBtn = document.getElementById('mac-fetch-btn');
        const webFetchBtn = document.getElementById('web-fetch-btn');
        const iconPreview = document.getElementById('icon-preview');
        const resultPlaceholder = document.getElementById('result-placeholder');
        const downloadLink = document.getElementById('download-link');
        
        // 切换标签页
        tabs.forEach(tab => {
            tab.addEventListener('click', function() {
                // 更新活动标签样式
                tabs.forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                // 显示对应的内容区域
                const tabId = this.getAttribute('data-tab');
                iosTab.style.display = 'none';
                macTab.style.display = 'none';
                webTab.style.display = 'none';
                
                if (tabId === 'ios') {
                    iosTab.style.display = 'block';
                } else if (tabId === 'mac') {
                    macTab.style.display = 'block';
                } else if (tabId === 'web') {
                    webTab.style.display = 'block';
                }
                
                // 重置结果区域
                resetResultArea();
            });
        });
        
        // 重置结果区域
        function resetResultArea() {
            iconPreview.style.display = 'none';
            downloadLink.style.display = 'none';
            resultPlaceholder.style.display = 'block';
            resultPlaceholder.textContent = '图标将在这里显示';
        }
        
        // 获取iOS应用图标
        iosFetchBtn.addEventListener('click', function() {
            const appName = document.getElementById('ios-app-name').value.trim();
            const appId = document.getElementById('ios-app-id').value.trim();
            
            if (!appName) {
                alert('请输入iOS应用名称');
                return;
            }
            
            fetchIOSIcon(appName, appId);
        });
        
        // 获取Mac应用图标
        macFetchBtn.addEventListener('click', function() {
            const appName = document.getElementById('mac-app-name').value.trim();
            const appId = document.getElementById('mac-app-id').value.trim();
            
            if (!appName) {
                alert('请输入Mac应用名称');
                return;
            }
            
            fetchMacIcon(appName, appId);
        });
        
        // 获取网页图标
        webFetchBtn.addEventListener('click', function() {
            let url = document.getElementById('website-url').value.trim();
            
            if (!url) {
                alert('请输入网站URL');
                return;
            }
            
            // 确保URL以http://或https://开头
            if (!url.startsWith('http://') && !url.startsWith('https://')) {
                url = 'https://' + url;
            }
            
            fetchWebIcon(url);
        });
        
        // 获取iOS应用图标函数
        function fetchIOSIcon(appName, appId = '') {
            resetResultArea();
            resultPlaceholder.textContent = '正在获取图标...';
            
            // 使用iTunes API或直接构造App Store图标URL
            let iconUrl;
            
            if (appId) {
                // 如果有App Store ID，直接使用官方API
                iconUrl = `https://itunes.apple.com/lookup?id=${appId}&country=cn`;
            } else {
                // 如果没有ID，尝试搜索API
                iconUrl = `https://itunes.apple.com/search?term=${encodeURIComponent(appName)}&entity=software&country=cn&limit=1`;
            }
            
            fetch(iconUrl)
                .then(response => response.json())
                .then(data => {
                    if (data.resultCount === 0) {
                        throw new Error('未找到匹配的应用');
                    }
                    
                    // 获取第一个结果的图标URL
                    const result = data.results[0];
                    const iconUrl = result.artworkUrl512 || result.artworkUrl100 || result.artworkUrl60;
                    
                    if (!iconUrl) {
                        throw new Error('无法获取图标URL');
                    }
                    
                    // 显示图标
                    displayIcon(iconUrl.replace('100x100bb.jpg', '512x512bb.jpg'), `${appName} iOS应用图标`);
                })
                .catch(error => {
                    console.error('获取iOS应用图标失败:', error);
                    resultPlaceholder.textContent = '获取图标失败: ' + error.message;
                    
                    // 如果没有ID，尝试使用第三方服务
                    if (!appId) {
                        resultPlaceholder.textContent += '\n尝试使用备用方法...';
                        setTimeout(() => {
                            fetchIOSIconAlternative(appName);
                        }, 1000);
                    }
                });
        }
        
        // iOS应用图标备用获取方法
        function fetchIOSIconAlternative(appName) {
            // 使用第三方服务或直接构造URL
            const iconUrl = `https://api.iconfinder.com/v4/icons/search?query=${encodeURIComponent(appName)}&count=1`;
            
            fetch(iconUrl)
                .then(response => response.json())
                .then(data => {
                    if (data.icons.length === 0) {
                        throw new Error('未找到匹配的图标');
                    }
                    
                    const icon = data.icons[0];
                    const iconUrl = icon.raster_sizes[icon.raster_sizes.length - 1].formats[0].preview_url;
                    
                    displayIcon(iconUrl, `${appName} iOS应用图标`);
                })
                .catch(error => {
                    console.error('备用方法获取图标失败:', error);
                    resultPlaceholder.textContent = '获取图标失败: ' + error.message;
                });
        }
        
        // 获取Mac应用图标函数
        function fetchMacIcon(appName, appId = '') {
            resetResultArea();
            resultPlaceholder.textContent = '正在获取图标...';
            
            // Mac应用图标获取逻辑与iOS类似
            let iconUrl;
            
            if (appId) {
                iconUrl = `https://itunes.apple.com/lookup?id=${appId}&country=cn`;
            } else {
                iconUrl = `https://itunes.apple.com/search?term=${encodeURIComponent(appName)}&entity=macSoftware&country=cn&limit=1`;
            }
            
            fetch(iconUrl)
                .then(response => response.json())
                .then(data => {
                    if (data.resultCount === 0) {
                        throw new Error('未找到匹配的Mac应用');
                    }
                    
                    const result = data.results[0];
                    const iconUrl = result.artworkUrl512 || result.artworkUrl100 || result.artworkUrl60;
                    
                    if (!iconUrl) {
                        throw new Error('无法获取图标URL');
                    }
                    
                    displayIcon(iconUrl.replace('100x100bb.jpg', '512x512bb.jpg'), `${appName} Mac应用图标`);
                })
                .catch(error => {
                    console.error('获取Mac应用图标失败:', error);
                    resultPlaceholder.textContent = '获取图标失败: ' + error.message;
                });
        }
        
        // 获取网页图标函数
        function fetchWebIcon(url) {
            resetResultArea();
            resultPlaceholder.textContent = '正在获取图标...';
            
            // 尝试获取网站的favicon
            let domain;
            try {
                domain = new URL(url).hostname;
            } catch (e) {
                resultPlaceholder.textContent = '无效的URL格式';
                return;
            }
            
            // 尝试几种常见的favicon位置
            const faviconUrls = [
                `https://${domain}/favicon.ico`,
                `https://${domain}/apple-touch-icon.png`,
                `https://www.google.com/s2/favicons?domain=${domain}`,
                `https://favicon.yandex.net/favicon/${domain}`,
                `https://icons.duckduckgo.com/ip2/${domain}.ico`
            ];
            
            // 依次尝试各个URL
            let attempts = 0;
            
            function tryNextUrl() {
                if (attempts >= faviconUrls.length) {
                    resultPlaceholder.textContent = '无法获取网站图标';
                    return;
                }
                
                const testUrl = faviconUrls[attempts];
                attempts++;
                
                // 创建一个隐藏的图片元素来测试URL是否有效
                const tester = new Image();
                tester.onload = function() {
                    // 如果图片加载成功，显示它
                    displayIcon(testUrl, `${domain} 网站图标`);
                };
                tester.onerror = function() {
                    // 如果图片加载失败，尝试下一个URL
                    tryNextUrl();
                };
                tester.src = testUrl;
            }
            
            tryNextUrl();
        }
        
        // 显示图标函数
        function displayIcon(url, fileName) {
            iconPreview.src = url;
            iconPreview.style.display = 'block';
            resultPlaceholder.style.display = 'none';
            
            // 设置下载链接
            downloadLink.href = url;
            downloadLink.setAttribute('download', `${fileName}.${url.split('.').pop().split('?')[0]}`);
            downloadLink.style.display = 'inline-block';
            downloadLink.textContent = `下载 ${fileName}`;
        }
    </script>
</body>
</html>
